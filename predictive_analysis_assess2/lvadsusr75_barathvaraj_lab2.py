# -*- coding: utf-8 -*-
"""LVADSUSR75_barathvaraj_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kB60Mtkn5NXcChPTzRsNiwVZu6EkkAj2
"""

import pandas as pd
import numpy as np

df=pd.read_csv("/content/drive/MyDrive/pred_analysis_datasets/assess2/Mall_Customers.csv")
df

df.isnull().sum()

df['Annual Income (k$)'].fillna(df['Annual Income (k$)'].median(),inplace=True)
df.isnull().sum()

from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import LabelEncoder

df['ratio_spend_income']=df['Spending Score (1-100)']/df['Annual Income (k$)']

encoder=LabelEncoder()
scaler=MinMaxScaler()

transformed_val_gen=encoder.fit_transform(df.iloc[:,1])
df.iloc[:,1]=transformed_val_gen

scaled_vals=scaler.fit_transform(df.iloc[:,1:])
df.iloc[:,1:]=scaled_vals
df

from sklearn.cluster import KMeans
n=[1,2,3,4,5]
X=df.iloc[:,1:]
sse_vals=[]
for i in n:
  kmeans=KMeans(n_clusters=i)
  pred_clusters=kmeans.fit_predict(X)
  sse=kmeans.inertia_
  sse_vals.append(sse)

import matplotlib.pyplot as plt
import seaborn as sns

sns.lineplot(x=n,y=sse_vals)
plt.show()

#elbow value shows 2 as the correct value for k so k=2

kmeans_best=KMeans(n_clusters=2)
kmeans_best.fit(X)
pred_vals_best=kmeans_best.predict(X)

df['clusters']=kmeans_best.labels_
df
sns.boxplot(data=df,x='clusters',y='ratio_spend_income',hue='clusters')
sns.boxplot(data=df,x='clusters',y='Spending Score (1-100)',hue='clusters')
sns.boxplot(data=df,x='clusters',y='Annual Income (k$)',hue='clusters')
sns.boxplot(data=df,x='clusters',y='Age',hue='clusters')
sns.boxplot(data=df,x='clusters',y='Gender',hue='clusters')
plt.show()

sns.barplot(data=df,x='clusters',y='ratio_spend_income',hue='clusters')
sns.barplot(data=df,x='clusters',y='Spending Score (1-100)',hue='clusters')
sns.barplot(data=df,x='clusters',y='Annual Income (k$)',hue='clusters')
sns.barplot(data=df,x='clusters',y='Age',hue='clusters')
sns.barplot(data=df,x='clusters',y='Gender',hue='clusters')

grouped_val=df.groupby('clusters').aggregate('mean')
sns.barplot(data=grouped_val.iloc[:,1:],x='clusters',y=grouped_val['ratio_spend_income'])
sns.barplot(data=grouped_val.iloc[:,1:],x='clusters',y=grouped_val['Spending Score (1-100)'])
sns.barplot(data=grouped_val.iloc[:,1:],x='clusters',y=grouped_val['Annual Income (k$)'])
sns.barplot(data=grouped_val.iloc[:,1:],x='clusters',y=grouped_val['Age'])

#Cluster 0 has more spend income ratio
#Cluster 0 has a lesser average age
#Cluster 1 has more average annual income
#Cluster 0 has more average spending score

#So cluster 0 can be concentrated more for any loyalty program as they have higher average spending score
#Also cluster 0 hass lesser average age so they comprise of young people